责任链式一种比较高级的设计模式，就是当你有一个请求，你不知道用哪个方法来处理这个请求，你可以把这个请求丢进一个责任链里（里面有很多方法），
这个责任链会通过轮询的方式自动找到对应的方法。

比如我要翻译一个单词，我写这个代码的时候，根本不知道用户会输入什么语言，所以我干脆就不管了，无论用户输入什么语言，我把它输入的内容丢进一个责任链，
这个责任链里有德语翻译器，英语翻译器，法语翻译器，汉语翻译器，日语翻译器等等，丢进去的时候它就会自动查找了，找到对应的语言就会自动翻译出来。



责任链，用请假的例子来演示，还可以使用状态模式


$jingli = new CommonManager("李经理");
$zongjian = new MajorDomo("郭总监");
$zongjingli = new GeneralManager("孙总");

//设置直接上级
$jingli->SetHeader($zongjian);
$zongjian->SetHeader($zongjingli);

//申请
$req1 = new Request();
$req1->requestType = "请假";
$req1->requestContent = "小菜请假！";
$req1->num = 1;
$jingli->Apply($req1);